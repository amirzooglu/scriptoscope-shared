import { z } from 'zod';
export declare const GetRequestNotesResponseSchema: z.ZodArray<z.ZodObject<{
    id: z.ZodString;
    requestId: z.ZodNullable<z.ZodString>;
    noteId: z.ZodNullable<z.ZodString>;
    createdAt: z.ZodNullable<z.ZodDate>;
    createdBy: z.ZodNullable<z.ZodString>;
    users: z.ZodOptional<z.ZodAny>;
    notes: z.ZodNullable<z.ZodObject<{
        id: z.ZodString;
        content: z.ZodString;
        createdAt: z.ZodNullable<z.ZodDate>;
        updatedAt: z.ZodNullable<z.ZodDate>;
        organizationId: z.ZodNullable<z.ZodString>;
        createdBy: z.ZodNullable<z.ZodString>;
        updatedBy: z.ZodNullable<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        content: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
    }, {
        id: string;
        content: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
    }>>;
    requests: z.ZodNullable<z.ZodObject<{
        id: z.ZodString;
        organizationId: z.ZodNullable<z.ZodString>;
        applicationId: z.ZodNullable<z.ZodString>;
        statusId: z.ZodNullable<z.ZodString>;
        requestTypeId: z.ZodNullable<z.ZodString>;
        requestRoleId: z.ZodNullable<z.ZodString>;
        requestOwnerId: z.ZodNullable<z.ZodString>;
        requestorId: z.ZodNullable<z.ZodString>;
        requestDate: z.ZodNullable<z.ZodDate>;
        requestNumber: z.ZodNullable<z.ZodString>;
        shortDescription: z.ZodNullable<z.ZodString>;
        notes: z.ZodNullable<z.ZodString>;
        effectiveDate: z.ZodNullable<z.ZodDate>;
        expirationDate: z.ZodNullable<z.ZodDate>;
        autoRenewal: z.ZodNullable<z.ZodBoolean>;
        includeAmount: z.ZodNullable<z.ZodBoolean>;
        requestValue: z.ZodNullable<z.ZodNumber>;
        amountReceived: z.ZodNullable<z.ZodNumber>;
        sendAlert: z.ZodNullable<z.ZodBoolean>;
        internalEntity: z.ZodNullable<z.ZodString>;
        createdAt: z.ZodNullable<z.ZodDate>;
        createdBy: z.ZodNullable<z.ZodString>;
        updatedAt: z.ZodNullable<z.ZodDate>;
        updatedBy: z.ZodNullable<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
        applicationId: string | null;
        statusId: string | null;
        requestTypeId: string | null;
        requestRoleId: string | null;
        requestOwnerId: string | null;
        requestorId: string | null;
        requestDate: Date | null;
        requestNumber: string | null;
        shortDescription: string | null;
        notes: string | null;
        effectiveDate: Date | null;
        expirationDate: Date | null;
        autoRenewal: boolean | null;
        includeAmount: boolean | null;
        requestValue: number | null;
        amountReceived: number | null;
        sendAlert: boolean | null;
        internalEntity: string | null;
    }, {
        id: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
        applicationId: string | null;
        statusId: string | null;
        requestTypeId: string | null;
        requestRoleId: string | null;
        requestOwnerId: string | null;
        requestorId: string | null;
        requestDate: Date | null;
        requestNumber: string | null;
        shortDescription: string | null;
        notes: string | null;
        effectiveDate: Date | null;
        expirationDate: Date | null;
        autoRenewal: boolean | null;
        includeAmount: boolean | null;
        requestValue: number | null;
        amountReceived: number | null;
        sendAlert: boolean | null;
        internalEntity: string | null;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    createdAt: Date | null;
    createdBy: string | null;
    notes: {
        id: string;
        content: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
    } | null;
    requestId: string | null;
    noteId: string | null;
    requests: {
        id: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
        applicationId: string | null;
        statusId: string | null;
        requestTypeId: string | null;
        requestRoleId: string | null;
        requestOwnerId: string | null;
        requestorId: string | null;
        requestDate: Date | null;
        requestNumber: string | null;
        shortDescription: string | null;
        notes: string | null;
        effectiveDate: Date | null;
        expirationDate: Date | null;
        autoRenewal: boolean | null;
        includeAmount: boolean | null;
        requestValue: number | null;
        amountReceived: number | null;
        sendAlert: boolean | null;
        internalEntity: string | null;
    } | null;
    users?: any;
}, {
    id: string;
    createdAt: Date | null;
    createdBy: string | null;
    notes: {
        id: string;
        content: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
    } | null;
    requestId: string | null;
    noteId: string | null;
    requests: {
        id: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        organizationId: string | null;
        createdBy: string | null;
        updatedBy: string | null;
        applicationId: string | null;
        statusId: string | null;
        requestTypeId: string | null;
        requestRoleId: string | null;
        requestOwnerId: string | null;
        requestorId: string | null;
        requestDate: Date | null;
        requestNumber: string | null;
        shortDescription: string | null;
        notes: string | null;
        effectiveDate: Date | null;
        expirationDate: Date | null;
        autoRenewal: boolean | null;
        includeAmount: boolean | null;
        requestValue: number | null;
        amountReceived: number | null;
        sendAlert: boolean | null;
        internalEntity: string | null;
    } | null;
    users?: any;
}>, "many">;
export type GetRequestNotesResponseType = z.infer<typeof GetRequestNotesResponseSchema>;
//# sourceMappingURL=GetRequestNotesResponse.d.ts.map